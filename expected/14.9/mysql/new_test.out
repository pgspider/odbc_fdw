--
-- mysql
-- new_test
--
\set ECHO none
\i sql/14.9/new_test.sql
--
-- new tcs
--
--Testcase 1:
CREATE EXTENSION IF NOT EXISTS :DB_EXTENSIONNAME;
--Testcase 2:
CREATE SERVER :DB_SERVERNAME FOREIGN DATA WRAPPER :DB_EXTENSIONNAME
  OPTIONS (odbc_DRIVER :DB_DRIVERNAME, odbc_SERVER :DB_SERVER, odbc_port :DB_PORT, odbc_DATABASE :DB_DATABASE);
--Testcase 3:
CREATE USER MAPPING FOR public SERVER :DB_SERVERNAME OPTIONS (odbc_UID :DB_USER, odbc_PWD :DB_PASS);
--Primary key options
--Testcase 4:
CREATE FOREIGN TABLE tbl01 (id bigint  OPTIONS (key 'true'), c1 int)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl01');
--Testcase 5:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (166565, 1);
                               QUERY PLAN                               
------------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl01(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: '166565'::bigint, 1
(4 rows)

--Testcase 6:
INSERT INTO tbl01 VALUES (166565, 1);
--Testcase 7:
EXPLAIN VERBOSE
INSERT INTO tbl01 (c1) VALUES (3);
                               QUERY PLAN                               
------------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl01(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: NULL::bigint, 3
(4 rows)

--Testcase 8:
INSERT INTO tbl01 (c1) VALUES (3); --fail
psql:sql/14.9/new_test.sql:25: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Column 'id' cannot be null
--Testcase 9:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (null, 4);
                               QUERY PLAN                               
------------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl01(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: NULL::bigint, 4
(4 rows)

--Testcase 10:
INSERT INTO tbl01 VALUES (null, 4); --fail
psql:sql/14.9/new_test.sql:30: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Column 'id' cannot be null
--Testcase 11:
EXPLAIN VERBOSE
INSERT INTO tbl01 VALUES (166565, 7);
                               QUERY PLAN                               
------------------------------------------------------------------------
 Insert on public.tbl01  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl01(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: '166565'::bigint, 7
(4 rows)

--Testcase 12:
INSERT INTO tbl01 VALUES (166565, 7); --fail, duplicate key
psql:sql/14.9/new_test.sql:35: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Duplicate entry '166565' for key 'tbl01.PRIMARY'
--Testcase 13:
CREATE FOREIGN TABLE tbl02 (id char(255)  OPTIONS (key 'true'), c1 INT, c2 float8, c3 boolean)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl02');
--Testcase 14:
EXPLAIN VERBOSE
INSERT INTO tbl02 VALUES (repeat('a', 255), 1, 12112.12, true);
                                                                                                                                                                QUERY PLAN                                                                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl02(id, c1, c2, c3) VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=1037)
         Output: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'::character(255), 1, '12112.12'::double precision, true
(4 rows)

--Testcase 15:
INSERT INTO tbl02 VALUES (repeat('a', 255), 1, 12112.12, true);
--Testcase 16:
EXPLAIN VERBOSE
INSERT INTO tbl02 VALUES (NULL, 2, -12.23, false);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl02(id, c1, c2, c3) VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=1037)
         Output: NULL::character(255), 2, '-12.23'::double precision, false
(4 rows)

--Testcase 17:
INSERT INTO tbl02 VALUES (NULL, 2, -12.23, false); --fail
psql:sql/14.9/new_test.sql:48: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Column 'id' cannot be null
--Testcase 18:
EXPLAIN VERBOSE
INSERT INTO tbl02(c1) VALUES (3);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Insert on public.tbl02  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl02(id, c1, c2, c3) VALUES (?, ?, ?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=45)
         Output: NULL::bpchar, 3, NULL::double precision, NULL::boolean
(4 rows)

--Testcase 19:
INSERT INTO tbl02(c1) VALUES (3); --fail
psql:sql/14.9/new_test.sql:53: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Column 'id' cannot be null
--NULL test
--Testcase 75
ALTER FOREIGN TABLE tbl02 OPTIONS (SET table 'tbl02_tmp01');
--Testcase 20:
ALTER FOREIGN TABLE tbl02 ALTER COLUMN c2 SET NOT NULL;
--Testcase 77:
\dS+ tbl02
                                           Foreign table "public.tbl02"
 Column |       Type       | Collation | Nullable | Default | FDW options  | Storage  | Stats target | Description 
--------+------------------+-----------+----------+---------+--------------+----------+--------------+-------------
 id     | character(255)   |           |          |         | (key 'true') | extended |              | 
 c1     | integer          |           |          |         |              | plain    |              | 
 c2     | double precision |           | not null |         |              | plain    |              | 
 c3     | boolean          |           |          |         |              | plain    |              | 
Server: mysql_server
FDW options: (schema 'odbc_fdw_regress', "table" 'tbl02_tmp01')

--Testcase 21:
INSERT INTO tbl02(id, c2) VALUES ('b', NULL); -- fail
psql:sql/14.9/new_test.sql:63: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Column 'c2' cannot be null
--Testcase 22:
SELECT * FROM tbl02; -- no result
 id | c1 | c2 | c3 
----+----+----+----
(0 rows)

--multiple key test
--Testcase 76
ALTER FOREIGN TABLE tbl02 OPTIONS (SET table 'tbl02_tmp02');
--Testcase 23:
ALTER FOREIGN TABLE tbl02 ALTER c1 OPTIONS (key 'true'); -- now, id and c1 are key
--Testcase 78:
\dS+ tbl02
                                           Foreign table "public.tbl02"
 Column |       Type       | Collation | Nullable | Default | FDW options  | Storage  | Stats target | Description 
--------+------------------+-----------+----------+---------+--------------+----------+--------------+-------------
 id     | character(255)   |           |          |         | (key 'true') | extended |              | 
 c1     | integer          |           |          |         | (key 'true') | plain    |              | 
 c2     | double precision |           | not null |         |              | plain    |              | 
 c3     | boolean          |           |          |         |              | plain    |              | 
Server: mysql_server
FDW options: (schema 'odbc_fdw_regress', "table" 'tbl02_tmp02')

--Testcase 73
INSERT INTO tbl02(id, c1) VALUES ('a', 12112.12); -- ok
--Testcase 79:
INSERT INTO tbl02(id, c1) VALUES ('a', 12112.12); -- fail
psql:sql/14.9/new_test.sql:78: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Duplicate entry 'a-12112' for key 'tbl02_tmp02.PRIMARY'
--Testcase 74
INSERT INTO tbl02(id, c1) VALUES ('a', 13113.13); -- ok
--Testcase 24:
EXPLAIN VERBOSE
SELECT * FROM tbl02;
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Foreign Scan on public.tbl02  (cost=25.00..27.00 rows=2 width=1037)
   Output: id, c1, c2, c3
   Foreign Table Size: 2 b
   Remote SQL: SELECT id, c1, c2, c3 FROM odbc_fdw_regress.tbl02_tmp02
(4 rows)

--Testcase 25:
SELECT * FROM tbl02;
                                                                                                                               id                                                                                                                                |  c1   | c2 | c3 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------+----+----
 a                                                                                                                                                                                                                                                               | 12112 |    | 
 a                                                                                                                                                                                                                                                               | 13113 |    | 
(2 rows)

--Testcase 32:
CREATE FOREIGN TABLE tbl03 (id timestamp  OPTIONS (key 'true'), c1 int)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl03');
--Testcase 33:
EXPLAIN VERBOSE
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 0);
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Insert on public.tbl03  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl03(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: 'Sat Jan 01 00:00:00 2000'::timestamp without time zone, 0
(4 rows)

--Testcase 34:
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 0);
--Testcase 35:
EXPLAIN VERBOSE
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 1);
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Insert on public.tbl03  (cost=0.00..0.01 rows=0 width=0)
   Remote SQL: INSERT INTO odbc_fdw_regress.tbl03(id, c1) VALUES (?, ?)
   ->  Result  (cost=0.00..0.01 rows=1 width=12)
         Output: 'Sat Jan 01 00:00:00 2000'::timestamp without time zone, 1
(4 rows)

--Testcase 36:
INSERT INTO tbl03 VALUES ('2000-01-01 00:00:00', 1); --fail
psql:sql/14.9/new_test.sql:98: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Duplicate entry '2000-01-01 00:00:00' for key 'tbl03.PRIMARY'
--WHERE clause push-down with functions in WHERE
--Testcase 37:
CREATE FOREIGN TABLE tbl04 (id INT  OPTIONS (key 'true'),  c1 float8, c2 bigint, c3 text, c4 boolean, c5 timestamp)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl04');
--Testcase 38:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE abs(c1) > 3233;
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((abs(c1) > 3233))
(4 rows)

--Testcase 39:
SELECT * FROM tbl04 WHERE abs(c1) > 3233;
 id |    c1    |  c2  |   c3    | c4 |            c5            
----+----------+------+---------+----+--------------------------
  6 | 45021.21 | 2121 | example | f  | Fri Oct 01 00:00:00 1999
  9 |  6867.34 | 8916 | thing   | f  | Fri Oct 01 10:10:00 2010
(2 rows)

--Testcase 40:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE sqrt(c2) > sqrt(c1) AND c1 >= 0 AND c2 > 0;
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=20)
   Output: id, c1, c2
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c1 >= 0)) AND ((c2 > 0)) AND ((sqrt(c2) > sqrt(c1)))
(4 rows)

--Testcase 41:
SELECT id, c1, c2 FROM tbl04 WHERE sqrt(c2) > sqrt(c1) AND c1 >= 0 AND c2 > 0;
 id |    c1    |   c2   
----+----------+--------
  1 |    31.12 | 128912
  2 |  2565.56 |   6565
  4 |    55.23 |    523
  7 | 121.9741 |  23241
  8 |       75 |    316
  9 |  6867.34 |   8916
(6 rows)

--Testcase 42:
EXPLAIN VERBOSE
SELECT c1, c2 FROM tbl04 WHERE c3 || c3 != 'things thing';
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
   Output: c1, c2
   Foreign Table Size: 9 b
   Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((c3 || c3) <> 'things thing'))
(4 rows)

--Testcase 43:
SELECT c1, c2 FROM tbl04 WHERE c3 || c3 != 'things thing';
    c1    |   c2    
----------+---------
    31.12 |  128912
  2565.56 |    6565
 -121.122 | 1829812
    55.23 |     523
    -1.12 |   22342
 45021.21 |    2121
 121.9741 |   23241
       75 |     316
  6867.34 |    8916
(9 rows)

--Testcase 44:
EXPLAIN VERBOSE
SELECT c1, id, c3 || c3 FROM tbl04 WHERE abs(c2) <> abs(c1);
                                        QUERY PLAN                                        
------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.02 rows=9 width=44)
   Output: c1, id, (c3 || c3)
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c3 FROM odbc_fdw_regress.tbl04 WHERE ((abs(c2) <> abs(c1)))
(4 rows)

--Testcase 45:
SELECT c1, id, c3 || c3 FROM tbl04 WHERE abs(c2) <> abs(c1);
    c1    | id |       ?column?       
----------+----+----------------------
    31.12 |  1 | anystringanystring
  2565.56 |  2 | exampleexample
 -121.122 |  3 | thingthing
    55.23 |  4 | !)@(#)!_#!!)@(#)!_#!
    -1.12 |  5 | (!)JAWLFJ(!)JAWLFJ
 45021.21 |  6 | exampleexample
 121.9741 |  7 | thingthing
       75 |  8 | exampleexample
  6867.34 |  9 | thingthing
(9 rows)

--Testcase 46:
EXPLAIN VERBOSE
SELECT id + id, c2, c3 || 'afas' FROM tbl04 WHERE floor(c2) > 0;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.05 rows=9 width=44)
   Output: (id + id), c2, (c3 || 'afas'::text)
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c2, c3 FROM odbc_fdw_regress.tbl04 WHERE ((floor(c2) > 0))
(4 rows)

--Testcase 47:
SELECT id + id, c2, c3 || 'afas' FROM tbl04 WHERE floor(c2) > 0;
 ?column? |   c2    |    ?column?    
----------+---------+----------------
        2 |  128912 | anystringafas
        4 |    6565 | exampleafas
        6 | 1829812 | thingafas
        8 |     523 | !)@(#)!_#!afas
       10 |   22342 | (!)JAWLFJafas
       12 |    2121 | exampleafas
       14 |   23241 | thingafas
       16 |     316 | exampleafas
       18 |    8916 | thingafas
(9 rows)

--Testcase 48:
EXPLAIN VERBOSE
SELECT c2, c3, c4, c5 FROM tbl04 WHERE c5 > '2000-01-01';
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=49)
   Output: c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((c5 > '2000-01-01 00:00:00'))
(4 rows)

--Testcase 49:
SELECT c2, c3, c4, c5 FROM tbl04 WHERE c5 > '2000-01-01';
  c2   |    c3     | c4 |            c5            
-------+-----------+----+--------------------------
 22342 | (!)JAWLFJ | f  | Mon Nov 01 00:00:00 2010
 23241 | thing     | f  | Fri Oct 01 00:00:00 2010
  8916 | thing     | f  | Fri Oct 01 10:10:00 2010
(3 rows)

--Testcase 50:
EXPLAIN VERBOSE
SELECT c5, c4, c2 FROM tbl04 WHERE c5 IN ('2000-01-01', '2010-11-01 00:00:00');
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=17)
   Output: c5, c4, c2
   Foreign Table Size: 9 b
   Remote SQL: SELECT c2, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (c5 IN ('2000-01-01 00:00:00', '2010-11-01 00:00:00'))
(4 rows)

--Testcase 51:
SELECT c5, c4, c2 FROM tbl04 WHERE c5 IN ('2000-01-01', '2010-11-01 00:00:00');
            c5            | c4 |   c2    
--------------------------+----+---------
 Sat Jan 01 00:00:00 2000 | t  |  128912
 Sat Jan 01 00:00:00 2000 | f  |    6565
 Sat Jan 01 00:00:00 2000 | t  | 1829812
 Mon Nov 01 00:00:00 2010 | f  |   22342
(4 rows)

--Testcase 245:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id IN (1, 2, 3);
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id IN (1, 2, 3))
(4 rows)

--Testcase 246:
SELECT * FROM tbl04 WHERE id IN (1, 2, 3);
 id |    c1    |   c2    |    c3     | c4 |            c5            
----+----------+---------+-----------+----+--------------------------
  1 |    31.12 |  128912 | anystring | t  | Sat Jan 01 00:00:00 2000
  2 |  2565.56 |    6565 | example   | f  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing     | t  | Sat Jan 01 00:00:00 2000
(3 rows)

--Testcase 247:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id NOT IN (1, 2, 3);
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id NOT IN (1, 2, 3))
(4 rows)

--Testcase 248:
SELECT * FROM tbl04 WHERE id NOT IN (1, 2, 3);
 id |    c1    |  c2   |     c3     | c4 |            c5            
----+----------+-------+------------+----+--------------------------
  4 |    55.23 |   523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 | 22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |  2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 | 23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |   316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |  8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(6 rows)

--Testcase 249:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id IN (1, c2, 3);
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((id IN (1, 3) OR (id = c2)))
(4 rows)

--Testcase 250:
SELECT * FROM tbl04 WHERE id IN (1, c2, 3);
 id |    c1    |   c2    |    c3     | c4 |            c5            
----+----------+---------+-----------+----+--------------------------
  1 |    31.12 |  128912 | anystring | t  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing     | t  | Sat Jan 01 00:00:00 2000
(2 rows)

--Testcase 251:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id NOT IN (1, c2, 3);
                                                    QUERY PLAN                                                     
-------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id NOT IN (1, 3)) AND ((id <> c2))
(4 rows)

--Testcase 252:
SELECT * FROM tbl04 WHERE id NOT IN (1, c2, 3);
 id |    c1    |  c2   |     c3     | c4 |            c5            
----+----------+-------+------------+----+--------------------------
  2 |  2565.56 |  6565 | example    | f  | Sat Jan 01 00:00:00 2000
  4 |    55.23 |   523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 | 22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |  2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 | 23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |   316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |  8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(7 rows)

--Testcase 253:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id <> ALL(ARRAY[c2, 2, 3]);
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id NOT IN (c2, 2, 3))
(4 rows)

--Testcase 254:
SELECT * FROM tbl04 WHERE id <> ALL(ARRAY[c2, 2, 3]);
 id |    c1    |   c2   |     c3     | c4 |            c5            
----+----------+--------+------------+----+--------------------------
  1 |    31.12 | 128912 | anystring  | t  | Sat Jan 01 00:00:00 2000
  4 |    55.23 |    523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 |  22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |   2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 |  23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |    316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |   8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(7 rows)

--Testcase 255:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id = ALL(ARRAY[c2, 2, 3]);
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((id = c2) AND (id = 2) AND (id = 3))
(4 rows)

--Testcase 256:
SELECT * FROM tbl04 WHERE id = ALL(ARRAY[c2, 2, 3]);
 id | c1 | c2 | c3 | c4 | c5 
----+----+----+----+----+----
(0 rows)

--Testcase 257:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id <> ANY(ARRAY[c2, 2, 3]);
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((id <> c2) OR (id <> 2) OR (id <> 3))
(4 rows)

--Testcase 258:
SELECT * FROM tbl04 WHERE id <> ANY(ARRAY[c2, 2, 3]);
 id |    c1    |   c2    |     c3     | c4 |            c5            
----+----------+---------+------------+----+--------------------------
  1 |    31.12 |  128912 | anystring  | t  | Sat Jan 01 00:00:00 2000
  2 |  2565.56 |    6565 | example    | f  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing      | t  | Sat Jan 01 00:00:00 2000
  4 |    55.23 |     523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 |   22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |    2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 |   23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |     316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |    8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(9 rows)

--Testcase 259:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id = ANY(ARRAY[c2, 2, 3]);
                                            QUERY PLAN                                            
--------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id IN (c2, 2, 3))
(4 rows)

--Testcase 260:
SELECT * FROM tbl04 WHERE id = ANY(ARRAY[c2, 2, 3]);
 id |    c1    |   c2    |   c3    | c4 |            c5            
----+----------+---------+---------+----+--------------------------
  2 |  2565.56 |    6565 | example | f  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing   | t  | Sat Jan 01 00:00:00 2000
(2 rows)

--Testcase 261:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id <> ALL(ARRAY[1, 2, 3]);
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id NOT IN (1, 2, 3))
(4 rows)

--Testcase 262:
SELECT * FROM tbl04 WHERE id <> ALL(ARRAY[1, 2, 3]);
 id |    c1    |  c2   |     c3     | c4 |            c5            
----+----------+-------+------------+----+--------------------------
  4 |    55.23 |   523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 | 22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |  2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 | 23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |   316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |  8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(6 rows)

--Testcase 263:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id = ALL(ARRAY[1, 2, 3]);
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((id = 1) AND (id = 2) AND (id = 3))
(4 rows)

--Testcase 264:
SELECT * FROM tbl04 WHERE id = ALL(ARRAY[1, 2, 3]);
 id | c1 | c2 | c3 | c4 | c5 
----+----+----+----+----+----
(0 rows)

--Testcase 265:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id <> ANY(ARRAY[1, 2, 3]);
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE ((id <> 1) OR (id <> 2) OR (id <> 3))
(4 rows)

--Testcase 266:
SELECT * FROM tbl04 WHERE id <> ANY(ARRAY[1, 2, 3]);
 id |    c1    |   c2    |     c3     | c4 |            c5            
----+----------+---------+------------+----+--------------------------
  1 |    31.12 |  128912 | anystring  | t  | Sat Jan 01 00:00:00 2000
  2 |  2565.56 |    6565 | example    | f  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing      | t  | Sat Jan 01 00:00:00 2000
  4 |    55.23 |     523 | !)@(#)!_#! | f  | Thu Nov 01 00:00:00 1990
  5 |    -1.12 |   22342 | (!)JAWLFJ  | f  | Mon Nov 01 00:00:00 2010
  6 | 45021.21 |    2121 | example    | f  | Fri Oct 01 00:00:00 1999
  7 | 121.9741 |   23241 | thing      | f  | Fri Oct 01 00:00:00 2010
  8 |       75 |     316 | example    | f  | Fri Oct 01 10:10:00 1999
  9 |  6867.34 |    8916 | thing      | f  | Fri Oct 01 10:10:00 2010
(9 rows)

--Testcase 267:
EXPLAIN VERBOSE
SELECT * FROM tbl04 WHERE id = ANY(ARRAY[1, 2, 3]);
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=61)
   Output: id, c1, c2, c3, c4, c5
   Foreign Table Size: 9 b
   Remote SQL: SELECT id, c1, c2, c3, c4, c5 FROM odbc_fdw_regress.tbl04 WHERE (id IN (1, 2, 3))
(4 rows)

--Testcase 268:
SELECT * FROM tbl04 WHERE id = ANY(ARRAY[1, 2, 3]);
 id |    c1    |   c2    |    c3     | c4 |            c5            
----+----------+---------+-----------+----+--------------------------
  1 |    31.12 |  128912 | anystring | t  | Sat Jan 01 00:00:00 2000
  2 |  2565.56 |    6565 | example   | f  | Sat Jan 01 00:00:00 2000
  3 | -121.122 | 1829812 | thing     | t  | Sat Jan 01 00:00:00 2000
(3 rows)

--Testcase 52:
EXPLAIN VERBOSE
SELECT c3, c5, c1 FROM tbl04 WHERE c1 > ALL(SELECT id FROM tbl04 WHERE c4 = true);
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=48)
   Output: tbl04.c3, tbl04.c5, tbl04.c1
   Filter: (SubPlan 1)
   Foreign Table Size: 9 b
   Remote SQL: SELECT c1, c3, c5 FROM odbc_fdw_regress.tbl04
   SubPlan 1
     ->  Materialize  (cost=25.00..34.05 rows=9 width=4)
           Output: tbl04_1.id
           ->  Foreign Scan on public.tbl04 tbl04_1  (cost=25.00..34.00 rows=9 width=4)
                 Output: tbl04_1.id
                 Foreign Table Size: 9 b
                 Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04 WHERE (c4)
(12 rows)

--Testcase 53:
SELECT c3, c5, c1 FROM tbl04 WHERE c1 > ALL(SELECT id FROM tbl04 WHERE c4 = true);
     c3     |            c5            |    c1    
------------+--------------------------+----------
 anystring  | Sat Jan 01 00:00:00 2000 |    31.12
 example    | Sat Jan 01 00:00:00 2000 |  2565.56
 !)@(#)!_#! | Thu Nov 01 00:00:00 1990 |    55.23
 example    | Fri Oct 01 00:00:00 1999 | 45021.21
 thing      | Fri Oct 01 00:00:00 2010 | 121.9741
 example    | Fri Oct 01 10:10:00 1999 |       75
 thing      | Fri Oct 01 10:10:00 2010 |  6867.34
(7 rows)

--Testcase 54:
EXPLAIN VERBOSE
SELECT c1, c5, c3, c2 FROM tbl04 WHERE c1 = ANY (SELECT c1 FROM tbl04 WHERE c4 != false) AND c1 > 0 OR c2 < 0;
                                        QUERY PLAN                                         
-------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=56)
   Output: tbl04.c1, tbl04.c5, tbl04.c3, tbl04.c2
   Filter: (((hashed SubPlan 1) AND (tbl04.c1 > '0'::double precision)) OR (tbl04.c2 < 0))
   Foreign Table Size: 9 b
   Remote SQL: SELECT c1, c2, c3, c5 FROM odbc_fdw_regress.tbl04
   SubPlan 1
     ->  Foreign Scan on public.tbl04 tbl04_1  (cost=25.00..34.00 rows=9 width=8)
           Output: tbl04_1.c1
           Foreign Table Size: 9 b
           Remote SQL: SELECT c1 FROM odbc_fdw_regress.tbl04 WHERE (c4)
(10 rows)

--Testcase 55:
SELECT c1, c5, c3, c2 FROM tbl04 WHERE c1 = ANY (SELECT c1 FROM tbl04 WHERE c4 != false) AND c1 > 0 OR c2 < 0;
  c1   |            c5            |    c3     |   c2   
-------+--------------------------+-----------+--------
 31.12 | Sat Jan 01 00:00:00 2000 | anystring | 128912
(1 row)

--aggregation function push-down: add variance
--Testcase 56:
EXPLAIN VERBOSE
SELECT variance(c1), variance(c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: variance(c1), variance(c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 57:
SELECT variance(c1), variance(c2) FROM tbl04;
     variance      |       variance        
-------------------+-----------------------
 218658330.4346485 | 363923108867.44444444
(1 row)

--Testcase 58:
EXPLAIN VERBOSE
SELECT variance(c1) FROM tbl04 WHERE c3 <> 'aef';
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Aggregate  (cost=34.02..34.03 rows=1 width=8)
   Output: variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=8)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1 FROM odbc_fdw_regress.tbl04 WHERE ((c3 <> 'aef'))
(6 rows)

--Testcase 59:
SELECT variance(c1) FROM tbl04 WHERE c3 <> 'aef';
     variance      
-------------------
 218658330.4346485
(1 row)

--Testcase 60:
EXPLAIN VERBOSE
SELECT max(id), min(c1), variance(c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.07..34.08 rows=1 width=44)
   Output: max(id), min(c1), variance(c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=20)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 61:
SELECT max(id), min(c1), variance(c2) FROM tbl04;
 max |   min    |       variance        
-----+----------+-----------------------
   9 | -121.122 | 363923108867.44444444
(1 row)

--Testcase 62:
EXPLAIN VERBOSE
SELECT variance(c2), variance(c1) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: variance(c2), variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 63:
SELECT variance(c2), variance(c1) FROM tbl04;
       variance        |     variance      
-----------------------+-------------------
 363923108867.44444444 | 218658330.4346485
(1 row)

--Testcase 64:
EXPLAIN VERBOSE
SELECT sum(c1), variance(c1) FROM tbl04 WHERE id <= 10;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=16)
   Output: sum(c1), variance(c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=8)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1 FROM odbc_fdw_regress.tbl04 WHERE ((id <= 10))
(6 rows)

--Testcase 65:
SELECT sum(c1), variance(c1) FROM tbl04 WHERE id <= 10;
    sum     |     variance      
------------+-------------------
 54615.1921 | 218658330.4346485
(1 row)

--aggregation function push-down: having
--Testcase 66:
EXPLAIN VERBOSE
SELECT count(c1), sum(c2), variance(c2) FROM tbl04 HAVING (count(c1) > 0);
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.07..34.09 rows=1 width=72)
   Output: count(c1), sum(c2), variance(c2)
   Filter: (count(tbl04.c1) > 0)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(7 rows)

--Testcase 67:
SELECT count(c1), sum(c2), variance(c2) FROM tbl04 HAVING (count(c1) > 0);
 count |   sum   |       variance        
-------+---------+-----------------------
     9 | 2022748 | 363923108867.44444444
(1 row)

--Testcase 68:
EXPLAIN VERBOSE
SELECT count(c1) + sum (c2), variance(c2)/2.12 FROM tbl04 HAVING count(c4) != 0 AND variance(c2) > 55.54;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.10..34.12 rows=1 width=64)
   Output: ((count(c1))::numeric + sum(c2)), (variance(c2) / 2.12)
   Filter: ((count(tbl04.c4) <> 0) AND (variance(tbl04.c2) > 55.54))
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=17)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2, c4 FROM odbc_fdw_regress.tbl04
(7 rows)

--Testcase 69:
SELECT count(c1) + sum (c2), variance(c2)/2.12 FROM tbl04 HAVING count(c4) != 0 AND variance(c2) > 55.54;
 ?column? |       ?column?        
----------+-----------------------
  2022757 | 171661843805.39832285
(1 row)

--Testcase 241:
EXPLAIN VERBOSE
SELECT count(c1), sum(c2) FROM tbl04 HAVING (count(c1) > 0);
                             QUERY PLAN                              
---------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (count(c1)), (sum(c2))
   Filter: ((count(tbl04.c1)) > 0)
   Foreign Table Size: 9 b
   Remote SQL: SELECT count(c1), sum(c2) FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 242:
SELECT count(c1), sum(c2) FROM tbl04 HAVING (count(c1) > 0);
 count |   sum   
-------+---------
     9 | 2022748
(1 row)

--Testcase 243:
EXPLAIN VERBOSE
SELECT count(c1) + sum (c2) FROM tbl04 HAVING count(c4) != 0 AND avg(c2) > 55.54;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=32)
   Output: (((count(c1))::numeric + sum(c2)))
   Filter: (((count(tbl04.c4)) <> 0) AND ((avg(tbl04.c2)) > 55.54))
   Foreign Table Size: 9 b
   Remote SQL: SELECT (count(c1) + sum(c2)), count(c4), avg(c2) FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 244:
SELECT count(c1) + sum (c2) FROM tbl04 HAVING count(c4) != 0 AND avg(c2) > 55.54;
 ?column? 
----------
  2022757
(1 row)

--aggregation function push-down:
-- avg
--Testcase 80:
EXPLAIN VERBOSE
SELECT avg(c1), avg(c2) + 1 FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (avg(c1)), ((avg(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT avg(c1), (avg(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 81:
SELECT avg(c1), avg(c2) + 1 FROM tbl04;
        avg        |  ?column?   
-------------------+-------------
 6068.354677777777 | 224750.7778
(1 row)

-- avg(DISTINCT)
--Testcase 82:
EXPLAIN VERBOSE
SELECT avg(DISTINCT c1), avg(DISTINCT c2) FROM tbl04;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (avg(DISTINCT c1)), (avg(DISTINCT c2))
   Foreign Table Size: 9 b
   Remote SQL: SELECT avg(DISTINCT c1), avg(DISTINCT c2) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 83:
SELECT avg(DISTINCT c1), avg(DISTINCT c2) FROM tbl04;
        avg        |     avg     
-------------------+-------------
 6068.354677777777 | 224749.7778
(1 row)

-- bit_and
--Testcase 84:
EXPLAIN VERBOSE
SELECT bit_and(id), bit_and(c2) + 1 FROM tbl04;
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=12)
   Output: (bit_and(id)), ((bit_and(c2) + 1))
   Foreign Table Size: 9 b
   Remote SQL: SELECT bit_and(id), (bit_and(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 85:
SELECT bit_and(id), bit_and(c2) + 1 FROM tbl04;
 bit_and | ?column? 
---------+----------
       0 |        1
(1 row)

-- bit_and(DISTINCT)
--Testcase 86:
EXPLAIN VERBOSE
SELECT bit_and(DISTINCT id), bit_and(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.05 rows=1 width=12)
   Output: bit_and(DISTINCT id), bit_and(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=12)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT id, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 87:
SELECT bit_and(DISTINCT id), bit_and(DISTINCT c2) FROM tbl04;
 bit_and | bit_and 
---------+---------
       0 |       0
(1 row)

-- bit_or
--Testcase 88:
EXPLAIN VERBOSE
SELECT bit_or(id), bit_or(c2) + 1 FROM tbl04;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=12)
   Output: (bit_or(id)), ((bit_or(c2) + 1))
   Foreign Table Size: 9 b
   Remote SQL: SELECT bit_or(id), (bit_or(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 89:
SELECT bit_or(id), bit_or(c2) + 1 FROM tbl04;
 bit_or | ?column? 
--------+----------
     15 |  1835008
(1 row)

-- bit_or(DISTINCT)
--Testcase 90:
EXPLAIN VERBOSE
SELECT bit_or(DISTINCT id), bit_or(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.05 rows=1 width=12)
   Output: bit_or(DISTINCT id), bit_or(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=12)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT id, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 91:
SELECT bit_or(DISTINCT id), bit_or(DISTINCT c2) FROM tbl04;
 bit_or | bit_or  
--------+---------
     15 | 1835007
(1 row)

-- count
--Testcase 92:
EXPLAIN VERBOSE
SELECT count(c1), count(c2), count(c3) FROM tbl04;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=24)
   Output: (count(c1)), (count(c2)), (count(c3))
   Foreign Table Size: 9 b
   Remote SQL: SELECT count(c1), count(c2), count(c3) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 93:
SELECT count(c1), count(c2), count(c3) FROM tbl04;
 count | count | count 
-------+-------+-------
     9 |     9 |     9
(1 row)

-- count(DISTINCT)
--Testcase 94:
EXPLAIN VERBOSE
SELECT count(DISTINCT c1), count(DISTINCT c2), count(DISTINCT c3) FROM tbl04;
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=24)
   Output: (count(DISTINCT c1)), (count(DISTINCT c2)), (count(DISTINCT c3))
   Foreign Table Size: 9 b
   Remote SQL: SELECT count(DISTINCT c1), count(DISTINCT c2), count(DISTINCT c3) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 95:
SELECT count(DISTINCT c1), count(DISTINCT c2), count(DISTINCT c3) FROM tbl04;
 count | count | count 
-------+-------+-------
     9 |     9 |     5
(1 row)

-- max/min
--Testcase 241:
EXPLAIN VERBOSE
SELECT max(c1), min(c1) FROM tbl04;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=16)
   Output: (max(c1)), (min(c1))
   Foreign Table Size: 9 b
   Remote SQL: SELECT max(c1), min(c1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 242:
SELECT max(c1), min(c1) FROM tbl04;
   max    |   min    
----------+----------
 45021.21 | -121.122
(1 row)

-- max/min (DISTINCT)
--Testcase 243:
EXPLAIN VERBOSE
SELECT max(DISTINCT c1), min(DISTINCT c1) FROM tbl04;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=16)
   Output: (max(DISTINCT c1)), (min(DISTINCT c1))
   Foreign Table Size: 9 b
   Remote SQL: SELECT max(DISTINCT c1), min(DISTINCT c1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 244:
SELECT max(DISTINCT c1), min(DISTINCT c1) FROM tbl04;
   max    |   min    
----------+----------
 45021.21 | -121.122
(1 row)

-- stddev
--Testcase 96:
EXPLAIN VERBOSE
SELECT stddev(c1), stddev(c2) + 1 FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: stddev(c1), (stddev(c2) + '1'::numeric)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 97:
SELECT stddev(c1), stddev(c2) + 1 FROM tbl04;
      stddev       |    ?column?     
-------------------+-----------------
 14787.10013608647 | 603261.39888878
(1 row)

-- stddev(DISTINCT)
--Testcase 98:
EXPLAIN VERBOSE
SELECT stddev(DISTINCT c1), stddev(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: stddev(DISTINCT c1), stddev(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 99:
SELECT stddev(DISTINCT c1), stddev(DISTINCT c2) FROM tbl04;
      stddev       |     stddev      
-------------------+-----------------
 14787.10013608647 | 603260.39888878
(1 row)

-- stddev_pop
--Testcase 100:
EXPLAIN VERBOSE
SELECT stddev_pop(c1), stddev_pop(c2) + 1 FROM tbl04;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (stddev_pop(c1)), ((stddev_pop(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT stddev_pop(c1), (stddev_pop(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 101:
SELECT stddev_pop(c1), stddev_pop(c2) + 1 FROM tbl04;
     stddev_pop     |     ?column?      
--------------------+-------------------
 13941.411707081685 | 568760.3585007397
(1 row)

-- stddev_pop(DISTINCT)
--Testcase 102:
EXPLAIN VERBOSE
SELECT stddev_pop(DISTINCT c1), stddev_pop(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: stddev_pop(DISTINCT c1), stddev_pop(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 103:
SELECT stddev_pop(DISTINCT c1), stddev_pop(DISTINCT c2) FROM tbl04;
     stddev_pop     |   stddev_pop    
--------------------+-----------------
 13941.411707081685 | 568759.35850074
(1 row)

-- stddev_samp
--Testcase 104:
EXPLAIN VERBOSE
SELECT stddev_samp(c1), stddev_samp(c2) + 1 FROM tbl04;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (stddev_samp(c1)), ((stddev_samp(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT stddev_samp(c1), (stddev_samp(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 105:
SELECT stddev_samp(c1), stddev_samp(c2) + 1 FROM tbl04;
    stddev_samp    |     ?column?      
-------------------+-------------------
 14787.10013608647 | 603261.3988887755
(1 row)

-- stddev_samp(DISTINCT)
--Testcase 106:
EXPLAIN VERBOSE
SELECT stddev_samp(DISTINCT c1), stddev_samp(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: stddev_samp(DISTINCT c1), stddev_samp(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 107:
SELECT stddev_samp(DISTINCT c1), stddev_samp(DISTINCT c2) FROM tbl04;
    stddev_samp    |   stddev_samp   
-------------------+-----------------
 14787.10013608647 | 603260.39888878
(1 row)

-- sum
--Testcase 108:
EXPLAIN VERBOSE
SELECT sum(c1), sum(c2) + 1 FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (sum(c1)), ((sum(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT sum(c1), (sum(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 109:
SELECT sum(c1), sum(c2) + 1 FROM tbl04;
    sum     | ?column? 
------------+----------
 54615.1921 |  2022749
(1 row)

-- sum(DISTINCT)
--Testcase 110:
EXPLAIN VERBOSE
SELECT sum(DISTINCT c1), sum(DISTINCT c2) FROM tbl04;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (sum(DISTINCT c1)), (sum(DISTINCT c2))
   Foreign Table Size: 9 b
   Remote SQL: SELECT sum(DISTINCT c1), sum(DISTINCT c2) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 111:
SELECT sum(DISTINCT c1), sum(DISTINCT c2) FROM tbl04;
        sum        |   sum   
-------------------+---------
 54615.19209999999 | 2022748
(1 row)

-- var_pop
--Testcase 112:
EXPLAIN VERBOSE
SELECT var_pop(c1), var_pop(c2) + 1 FROM tbl04;
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (var_pop(c1)), ((var_pop(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT var_pop(c1), (var_pop(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 113:
SELECT var_pop(c1), var_pop(c2) + 1 FROM tbl04;
      var_pop       |      ?column?      
--------------------+--------------------
 194362960.38635424 | 323487207883.17285
(1 row)

-- var_pop(DISTINCT)
--Testcase 114:
EXPLAIN VERBOSE
SELECT var_pop(DISTINCT c1), var_pop(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: var_pop(DISTINCT c1), var_pop(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 115:
SELECT var_pop(DISTINCT c1), var_pop(DISTINCT c2) FROM tbl04;
      var_pop       |        var_pop        
--------------------+-----------------------
 194362960.38635424 | 323487207882.17283951
(1 row)

-- var_samp
--Testcase 116:
EXPLAIN VERBOSE
SELECT var_samp(c1), var_samp(c2) + 1 FROM tbl04;
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Foreign Scan  (cost=1.00..1.00 rows=1 width=40)
   Output: (var_samp(c1)), ((var_samp(c2) + '1'::numeric))
   Foreign Table Size: 9 b
   Remote SQL: SELECT var_samp(c1), (var_samp(c2) + 1) FROM odbc_fdw_regress.tbl04
(4 rows)

--Testcase 117:
SELECT var_samp(c1), var_samp(c2) + 1 FROM tbl04;
     var_samp      |      ?column?      
-------------------+--------------------
 218658330.4346485 | 363923108868.44446
(1 row)

-- var_samp(DISTINCT)
--Testcase 118:
EXPLAIN VERBOSE
SELECT var_samp(DISTINCT c1), var_samp(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: var_samp(DISTINCT c1), var_samp(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 119:
SELECT var_samp(DISTINCT c1), var_samp(DISTINCT c2) FROM tbl04;
     var_samp      |       var_samp        
-------------------+-----------------------
 218658330.4346485 | 363923108867.44444444
(1 row)

-- variance(DISTINCT)
--Testcase 120:
EXPLAIN VERBOSE
SELECT variance(DISTINCT c1), variance(DISTINCT c2) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=40)
   Output: variance(DISTINCT c1), variance(DISTINCT c2)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=16)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT c1, c2 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 121:
SELECT variance(DISTINCT c1), variance(DISTINCT c2) FROM tbl04;
     variance      |       variance        
-------------------+-----------------------
 218658330.4346485 | 363923108867.44444444
(1 row)

-- non-push down case:
--Testcase 122:
EXPLAIN VERBOSE
SELECT corr(id, c1) FROM tbl04;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=34.05..34.06 rows=1 width=8)
   Output: corr((id)::double precision, c1)
   ->  Foreign Scan on public.tbl04  (cost=25.00..34.00 rows=9 width=12)
         Output: id, c1, c2, c3, c4, c5
         Foreign Table Size: 9 b
         Remote SQL: SELECT id, c1 FROM odbc_fdw_regress.tbl04
(6 rows)

--Testcase 123:
SELECT corr(id, c1) FROM tbl04;
        corr         
---------------------
 0.20164072965667135
(1 row)

-- ===================================================================
-- WHERE push-down
-- ===================================================================
-- add some null record
--Testcase 124:
INSERT INTO tbl04 VALUES (11, -1.12, NULL, '(!)JAWLFJ', false, '2010-11-01 00:00:00');
--Testcase 125:
INSERT INTO tbl04 VALUES (12, 45021.21, 2121, 'example', NULL, '1999-10-01 00:00:00');
--Testcase 126:
INSERT INTO tbl04 VALUES (13, 121.9741, 23241, 'thing', NULL, '2010-10-01 00:00:00');
--Testcase 127:
INSERT INTO tbl04 VALUES (14, 75, 316, 'example', NULL, '1999-10-01 10:10:00');
--Testcase 128:
INSERT INTO tbl04 VALUES (15, 6867.34, 8916, NULL, false, '2010-10-01 10:10:00');
-- Logical operator
--Testcase 129:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 OR c2 > 0 AND NOT c4;
                                                 QUERY PLAN                                                 
------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((c1 >= 0) OR ((c2 > 0) AND (NOT c4))))
(4 rows)

--Testcase 130:
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 OR c2 > 0 AND NOT c4;
 id |    c1    |   c2   
----+----------+--------
  1 |    31.12 | 128912
  2 |  2565.56 |   6565
  4 |    55.23 |    523
  5 |    -1.12 |  22342
  6 | 45021.21 |   2121
  7 | 121.9741 |  23241
  8 |       75 |    316
  9 |  6867.34 |   8916
 12 | 45021.21 |   2121
 13 | 121.9741 |  23241
 14 |       75 |    316
 15 |  6867.34 |   8916
(12 rows)

--Testcase 131:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 OR c4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((c1 >= 0) OR c4))
(4 rows)

--Testcase 132:
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 OR c4;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(12 rows)

--Testcase 133:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 AND c4;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (c4) AND ((c1 >= 0))
(4 rows)

--Testcase 134:
SELECT id, c1, c2 FROM tbl04 WHERE c1 >= 0 AND c4;
 id |  c1   |   c2   
----+-------+--------
  1 | 31.12 | 128912
(1 row)

--Testcase 135:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE NOT c4;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((NOT c4))
(4 rows)

--Testcase 136:
SELECT id, c1, c2 FROM tbl04 WHERE NOT c4;
 id |    c1    |  c2   
----+----------+-------
  2 |  2565.56 |  6565
  4 |    55.23 |   523
  5 |    -1.12 | 22342
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
  8 |       75 |   316
  9 |  6867.34 |  8916
 11 |    -1.12 |      
 15 |  6867.34 |  8916
(9 rows)

-- Comparison operator
--Testcase 137:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id > 1;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id > 1))
(4 rows)

--Testcase 138:
SELECT id, c1, c2 FROM tbl04 WHERE id > 1;
 id |    c1    |   c2    
----+----------+---------
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(13 rows)

--Testcase 139:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id >= 1;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id >= 1))
(4 rows)

--Testcase 140:
SELECT id, c1, c2 FROM tbl04 WHERE id >= 1;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(14 rows)

--Testcase 141:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id < 2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id < 2))
(4 rows)

--Testcase 142:
SELECT id, c1, c2 FROM tbl04 WHERE id < 2;
 id |  c1   |   c2   
----+-------+--------
  1 | 31.12 | 128912
(1 row)

--Testcase 143:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id <= 2;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id <= 2))
(4 rows)

--Testcase 144:
SELECT id, c1, c2 FROM tbl04 WHERE id <= 2;
 id |   c1    |   c2   
----+---------+--------
  1 |   31.12 | 128912
  2 | 2565.56 |   6565
(2 rows)

--Testcase 145:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id = 2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id = 2))
(4 rows)

--Testcase 146:
SELECT id, c1, c2 FROM tbl04 WHERE id = 2;
 id |   c1    |  c2  
----+---------+------
  2 | 2565.56 | 6565
(1 row)

--Testcase 147:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id <> 2;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id <> 2))
(4 rows)

--Testcase 148:
SELECT id, c1, c2 FROM tbl04 WHERE id <> 2;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(13 rows)

--Testcase 149:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id != 2;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id <> 2))
(4 rows)

--Testcase 150:
SELECT id, c1, c2 FROM tbl04 WHERE id != 2;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(13 rows)

--Testcase 151:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id NOT BETWEEN 1 AND 5;
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((id < 1) OR (id > 5)))
(4 rows)

--Testcase 152:
SELECT id, c1, c2 FROM tbl04 WHERE id NOT BETWEEN 1 AND 5;
 id |    c1    |  c2   
----+----------+-------
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
  8 |       75 |   316
  9 |  6867.34 |  8916
 11 |    -1.12 |      
 12 | 45021.21 |  2121
 13 | 121.9741 | 23241
 14 |       75 |   316
 15 |  6867.34 |  8916
(9 rows)

--Testcase 153:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id BETWEEN c1 AND c2;
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((id <= c2)) AND ((id >= c1))
(4 rows)

--Testcase 154:
SELECT id, c1, c2 FROM tbl04 WHERE id BETWEEN c1 AND c2;
 id |    c1    |   c2    
----+----------+---------
  3 | -121.122 | 1829812
  5 |    -1.12 |   22342
(2 rows)

--Testcase 155:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id NOT BETWEEN SYMMETRIC 1 AND 5;
                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((id < 1) OR (id > 5))) AND (((id < 5) OR (id > 1)))
(4 rows)

--Testcase 156:
SELECT id, c1, c2 FROM tbl04 WHERE id NOT BETWEEN SYMMETRIC 1 AND 5;
 id |    c1    |  c2   
----+----------+-------
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
  8 |       75 |   316
  9 |  6867.34 |  8916
 11 |    -1.12 |      
 12 | 45021.21 |  2121
 13 | 121.9741 | 23241
 14 |       75 |   316
 15 |  6867.34 |  8916
(9 rows)

--Testcase 157:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id BETWEEN SYMMETRIC c1 AND c2;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((((id >= c1) AND (id <= c2)) OR ((id >= c2) AND (id <= c1))))
(4 rows)

--Testcase 158:
SELECT id, c1, c2 FROM tbl04 WHERE id BETWEEN SYMMETRIC c1 AND c2;
 id |    c1    |   c2    
----+----------+---------
  3 | -121.122 | 1829812
  5 |    -1.12 |   22342
(2 rows)

--Testcase 159:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c1 IS DISTINCT FROM 2; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Filter: (tbl04.c1 IS DISTINCT FROM '2'::double precision)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 160:
SELECT id, c1, c2 FROM tbl04 WHERE c1 IS DISTINCT FROM 2; -- does not push down
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(14 rows)

--Testcase 161:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c1 IS DISTINCT FROM id; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Filter: (tbl04.c1 IS DISTINCT FROM (tbl04.id)::double precision)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 162:
SELECT id, c1, c2 FROM tbl04 WHERE c1 IS DISTINCT FROM id; -- does not push down
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(14 rows)

--Testcase 163:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c3 IS NULL;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c3 IS NULL))
(4 rows)

--Testcase 164:
SELECT id, c1, c2 FROM tbl04 WHERE c3 IS NULL;
 id |   c1    |  c2  
----+---------+------
 15 | 6867.34 | 8916
(1 row)

--Testcase 165:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c3 IS NOT NULL;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c3 IS NOT NULL))
(4 rows)

--Testcase 166:
SELECT id, c1, c2 FROM tbl04 WHERE c3 IS NOT NULL;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 11 |    -1.12 |        
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
(13 rows)

--Testcase 167:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS TRUE;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c4 IS TRUE))
(4 rows)

--Testcase 168:
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS TRUE;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  3 | -121.122 | 1829812
(2 rows)

--Testcase 169:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS FALSE;
                                    QUERY PLAN                                     
-----------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c4 IS FALSE))
(4 rows)

--Testcase 170:
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS FALSE;
 id |    c1    |  c2   
----+----------+-------
  2 |  2565.56 |  6565
  4 |    55.23 |   523
  5 |    -1.12 | 22342
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
  8 |       75 |   316
  9 |  6867.34 |  8916
 11 |    -1.12 |      
 15 |  6867.34 |  8916
(9 rows)

--Testcase 171:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS NOT TRUE;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c4 IS NOT TRUE))
(4 rows)

--Testcase 172:
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS NOT TRUE;
 id |    c1    |  c2   
----+----------+-------
  2 |  2565.56 |  6565
  4 |    55.23 |   523
  5 |    -1.12 | 22342
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
  8 |       75 |   316
  9 |  6867.34 |  8916
 11 |    -1.12 |      
 12 | 45021.21 |  2121
 13 | 121.9741 | 23241
 14 |       75 |   316
 15 |  6867.34 |  8916
(12 rows)

--Testcase 173:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS NOT FALSE;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((c4 IS NOT FALSE))
(4 rows)

--Testcase 174:
SELECT id, c1, c2 FROM tbl04 WHERE c4 IS NOT FALSE;
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  3 | -121.122 | 1829812
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
(5 rows)

--Testcase 175:
EXPLAIN VERBOSE
SELECT id, c1, c4 FROM tbl04 WHERE c4 IS UNKNOWN; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=13)
   Output: id, c1, c4
   Filter: (tbl04.c4 IS UNKNOWN)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c4 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 176:
SELECT id, c1, c4 FROM tbl04 WHERE c4 IS UNKNOWN; -- does not push down
 id |    c1    | c4 
----+----------+----
 12 | 45021.21 | 
 13 | 121.9741 | 
 14 |       75 | 
(3 rows)

--Testcase 177:
EXPLAIN VERBOSE
SELECT id, c1, c4 FROM tbl04 WHERE c4 IS NOT UNKNOWN; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=13)
   Output: id, c1, c4
   Filter: (tbl04.c4 IS NOT UNKNOWN)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c4 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 178:
SELECT id, c1, c4 FROM tbl04 WHERE c4 IS NOT UNKNOWN; -- does not push down
 id |    c1    | c4 
----+----------+----
  1 |    31.12 | t
  2 |  2565.56 | f
  3 | -121.122 | t
  4 |    55.23 | f
  5 |    -1.12 | f
  6 | 45021.21 | f
  7 | 121.9741 | f
  8 |       75 | f
  9 |  6867.34 | f
 11 |    -1.12 | f
 15 |  6867.34 | f
(11 rows)

-- Mathematical operator
--Testcase 179:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE id * 100 + 100 > c2;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE ((((id * 100) + 100) > c2))
(4 rows)

--Testcase 180:
SELECT id, c1, c2 FROM tbl04 WHERE c1 * 100 + 100 > c2;
 id |    c1    |  c2  
----+----------+------
  2 |  2565.56 | 6565
  4 |    55.23 |  523
  6 | 45021.21 | 2121
  8 |       75 |  316
  9 |  6867.34 | 8916
 12 | 45021.21 | 2121
 14 |       75 |  316
 15 |  6867.34 | 8916
(8 rows)

--Testcase 181:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c2 - c1 < 0;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((c2 - c1) < 0))
(4 rows)

--Testcase 182:
SELECT id, c1, c2 FROM tbl04 WHERE c2 - c1 < 0;
 id |    c1    |  c2  
----+----------+------
  6 | 45021.21 | 2121
 12 | 45021.21 | 2121
(2 rows)

--Testcase 183:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c2 / 100 > 0; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Filter: ((tbl04.c2 / 100) > 0)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 184:
SELECT id, c1, c2 FROM tbl04 WHERE c2 / 100 > 0; -- does not push down
 id |    c1    |   c2    
----+----------+---------
  1 |    31.12 |  128912
  2 |  2565.56 |    6565
  3 | -121.122 | 1829812
  4 |    55.23 |     523
  5 |    -1.12 |   22342
  6 | 45021.21 |    2121
  7 | 121.9741 |   23241
  8 |       75 |     316
  9 |  6867.34 |    8916
 12 | 45021.21 |    2121
 13 | 121.9741 |   23241
 14 |       75 |     316
 15 |  6867.34 |    8916
(13 rows)

--Testcase 185:
EXPLAIN VERBOSE
SELECT id, c1, c2 FROM tbl04 WHERE c2 % 2 = 1; -- does not push down
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=20)
   Output: id, c1, c2
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c1, c2 FROM odbc_fdw_regress.tbl04 WHERE (((c2 % 2) = 1))
(4 rows)

--Testcase 186:
SELECT id, c1, c2 FROM tbl04 WHERE c2 % 2 = 1; -- does not push down
 id |    c1    |  c2   
----+----------+-------
  2 |  2565.56 |  6565
  4 |    55.23 |   523
  6 | 45021.21 |  2121
  7 | 121.9741 | 23241
 12 | 45021.21 |  2121
 13 | 121.9741 | 23241
(6 rows)

--Testcase 187:
EXPLAIN VERBOSE
SELECT id, id ^ 2 FROM tbl04 WHERE id ^ 2 > 4; -- does not push down
                                         QUERY PLAN                                         
--------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.07 rows=14 width=12)
   Output: id, ((id)::double precision ^ '2'::double precision)
   Filter: (((tbl04.id)::double precision ^ '2'::double precision) > '4'::double precision)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 188:
SELECT id, id ^ 2 FROM tbl04 WHERE id ^ 2 > 4; -- does not push down
 id | ?column? 
----+----------
  3 |        9
  4 |       16
  5 |       25
  6 |       36
  7 |       49
  8 |       64
  9 |       81
 11 |      121
 12 |      144
 13 |      169
 14 |      196
 15 |      225
(12 rows)

--Testcase 189:
EXPLAIN VERBOSE
SELECT id, |/id FROM tbl04 WHERE |/id < 4; -- does not push down
                              QUERY PLAN                               
-----------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.07 rows=14 width=12)
   Output: id, (|/ (id)::double precision)
   Filter: ((|/ (tbl04.id)::double precision) < '4'::double precision)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 190:
SELECT id, |/id FROM tbl04 WHERE |/id < 4; -- does not push down
 id |      ?column?      
----+--------------------
  1 |                  1
  2 | 1.4142135623730951
  3 | 1.7320508075688772
  4 |                  2
  5 |   2.23606797749979
  6 |  2.449489742783178
  7 | 2.6457513110645907
  8 | 2.8284271247461903
  9 |                  3
 11 |    3.3166247903554
 12 | 3.4641016151377544
 13 |  3.605551275463989
 14 | 3.7416573867739413
 15 |  3.872983346207417
(14 rows)

--Testcase 191:
EXPLAIN VERBOSE
SELECT id, ||/id FROM tbl04 WHERE ||/id < 4; -- does not push down
                               QUERY PLAN                               
------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.07 rows=14 width=12)
   Output: id, (||/ (id)::double precision)
   Filter: ((||/ (tbl04.id)::double precision) < '4'::double precision)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 192:
SELECT id, ||/id FROM tbl04 WHERE ||/id < 4; -- does not push down
 id |      ?column?      
----+--------------------
  1 |                  1
  2 | 1.2599210498948734
  3 | 1.4422495703074083
  4 | 1.5874010519681996
  5 | 1.7099759466766968
  6 | 1.8171205928321394
  7 | 1.9129311827723894
  8 |                  2
  9 |  2.080083823051904
 11 | 2.2239800905693157
 12 | 2.2894284851066633
 13 | 2.3513346877207577
 14 | 2.4101422641752306
 15 |   2.46621207433047
(14 rows)

--Testcase 193:
EXPLAIN VERBOSE
SELECT id, @c2 FROM tbl04 WHERE @c2 < 1000; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=12)
   Output: id, (@ c2)
   Filter: ((@ tbl04.c2) < 1000)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c2 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 194:
SELECT id, @c2 FROM tbl04 WHERE @c2 < 1000; -- does not push down
 id | ?column? 
----+----------
  4 |      523
  8 |      316
 14 |      316
(3 rows)

--Testcase 195:
EXPLAIN VERBOSE
SELECT id, id & 123 FROM tbl04 WHERE id & 123 < 4; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=8)
   Output: id, (id & 123)
   Filter: ((tbl04.id & 123) < 4)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 196:
SELECT id, id & 123 FROM tbl04 WHERE id & 123 < 4; -- does not push down
 id | ?column? 
----+----------
  1 |        1
  2 |        2
  3 |        3
  4 |        0
  5 |        1
  6 |        2
  7 |        3
(7 rows)

--Testcase 197:
EXPLAIN VERBOSE
SELECT id, 123 | c2 FROM tbl04 WHERE 123 | c2 > 4; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=12)
   Output: id, ('123'::bigint | c2)
   Filter: (('123'::bigint | tbl04.c2) > 4)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c2 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 198:
SELECT id, 123 | c2 FROM tbl04 WHERE 123 | c2 > 4; -- does not push down
 id | ?column? 
----+----------
  1 |   129019
  2 |     6655
  3 |  1829887
  4 |      635
  5 |    22399
  6 |     2171
  7 |    23291
  8 |      383
  9 |     8959
 12 |     2171
 13 |    23291
 14 |      383
 15 |     8959
(13 rows)

--Testcase 199:
EXPLAIN VERBOSE
SELECT id, id # 324 FROM tbl04 WHERE id # 324 > 4; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=8)
   Output: id, (id # 324)
   Filter: ((tbl04.id # 324) > 4)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 200:
SELECT id, id # 324 FROM tbl04 WHERE id # 324 > 4; -- does not push down
 id | ?column? 
----+----------
  1 |      325
  2 |      326
  3 |      327
  4 |      320
  5 |      321
  6 |      322
  7 |      323
  8 |      332
  9 |      333
 11 |      335
 12 |      328
 13 |      329
 14 |      330
 15 |      331
(14 rows)

--Testcase 201:
EXPLAIN VERBOSE
SELECT id, ~id FROM tbl04 WHERE ~id < -2; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=8)
   Output: id, (~ id)
   Filter: ((~ tbl04.id) < '-2'::integer)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 202:
SELECT id, ~id FROM tbl04 WHERE ~id < -2; -- does not push down
 id | ?column? 
----+----------
  2 |       -3
  3 |       -4
  4 |       -5
  5 |       -6
  6 |       -7
  7 |       -8
  8 |       -9
  9 |      -10
 11 |      -12
 12 |      -13
 13 |      -14
 14 |      -15
 15 |      -16
(13 rows)

--Testcase 203:
EXPLAIN VERBOSE
SELECT id, id << 2 FROM tbl04 WHERE id << 2 < 10; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=8)
   Output: id, (id << 2)
   Filter: ((tbl04.id << 2) < 10)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 204:
SELECT id, id << 2 FROM tbl04 WHERE id << 2 < 10; -- does not push down
 id | ?column? 
----+----------
  1 |        4
  2 |        8
(2 rows)

--Testcase 205:
EXPLAIN VERBOSE
SELECT id, id >> 2 FROM tbl04 WHERE id >> 2 = 0; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.03 rows=14 width=8)
   Output: id, (id >> 2)
   Filter: ((tbl04.id >> 2) = 0)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 206:
SELECT id, id >> 2 FROM tbl04 WHERE id >> 2 = 0; -- does not push down
 id | ?column? 
----+----------
  1 |        0
  2 |        0
  3 |        0
(3 rows)

-- String operator
--Testcase 207:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 IS NFC NORMALIZED; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 IS NFC NORMALIZED)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 208:
SELECT c3 FROM tbl04 WHERE c3 IS NFC NORMALIZED; -- does not push down
     c3     
------------
 anystring
 example
 thing
 !)@(#)!_#!
 (!)JAWLFJ
 example
 thing
 example
 thing
 (!)JAWLFJ
 example
 thing
 example
(13 rows)

--Testcase 209:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 IS NOT NFKC NORMALIZED; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (NOT (tbl04.c3 IS NFKC NORMALIZED))
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 210:
SELECT c3 FROM tbl04 WHERE c3 IS NOT NFKC NORMALIZED; -- does not push down
 c3 
----
(0 rows)

-- Pattern matching operator
--Testcase 211:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 LIKE '%hi%';
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04 WHERE ((c3 LIKE '%hi%'))
(4 rows)

--Testcase 212:
SELECT c3 FROM tbl04 WHERE c3 LIKE '%hi%';
  c3   
-------
 thing
 thing
 thing
 thing
(4 rows)

--Testcase 213:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 NOT LIKE '%hi%';
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04 WHERE ((c3 NOT LIKE '%hi%'))
(4 rows)

--Testcase 214:
SELECT c3 FROM tbl04 WHERE c3 NOT LIKE '%hi%';
     c3     
------------
 anystring
 example
 !)@(#)!_#!
 (!)JAWLFJ
 example
 example
 (!)JAWLFJ
 example
 example
(9 rows)

--Testcase 215:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 ILIKE '%Hi%'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 ~~* '%Hi%'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 216:
SELECT c3 FROM tbl04 WHERE c3 ILIKE '%Hi%'; -- does not push down
  c3   
-------
 thing
 thing
 thing
 thing
(4 rows)

--Testcase 217:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 NOT ILIKE '%Hi%'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 !~~* '%Hi%'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 218:
SELECT c3 FROM tbl04 WHERE c3 NOT ILIKE '%Hi%'; -- does not push down
     c3     
------------
 anystring
 example
 !)@(#)!_#!
 (!)JAWLFJ
 example
 example
 (!)JAWLFJ
 example
 example
(9 rows)

--Testcase 219:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 SIMILAR TO '%(y|w)%'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 ~ '^(?:.*(?:y|w).*)$'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 220:
SELECT c3 FROM tbl04 WHERE c3 SIMILAR TO '%(y|w)%'; -- does not push down
    c3     
-----------
 anystring
(1 row)

--Testcase 221:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 NOT SIMILAR TO '%(y|w)%'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 !~ '^(?:.*(?:y|w).*)$'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 222:
SELECT c3 FROM tbl04 WHERE c3 NOT SIMILAR TO '%(y|w)%'; -- does not push down
     c3     
------------
 example
 thing
 !)@(#)!_#!
 (!)JAWLFJ
 example
 thing
 example
 thing
 (!)JAWLFJ
 example
 thing
 example
(12 rows)

--Testcase 223:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 ~ 'any.*'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 ~ 'any.*'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 224:
SELECT c3 FROM tbl04 WHERE c3 ~ 'any.*'; -- does not push down
    c3     
-----------
 anystring
(1 row)

--Testcase 225:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 ~* 'ANY.*'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 ~* 'ANY.*'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 226:
SELECT c3 FROM tbl04 WHERE c3 ~* 'ANY.*'; -- does not push down
    c3     
-----------
 anystring
(1 row)

--Testcase 227:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 !~ 'any.*'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 !~ 'any.*'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 228:
SELECT c3 FROM tbl04 WHERE c3 !~ 'any.*'; -- does not push down
     c3     
------------
 example
 thing
 !)@(#)!_#!
 (!)JAWLFJ
 example
 thing
 example
 thing
 (!)JAWLFJ
 example
 thing
 example
(12 rows)

--Testcase 229:
EXPLAIN VERBOSE
SELECT c3 FROM tbl04 WHERE c3 !~* 'ANY.*'; -- does not push down
                             QUERY PLAN                             
--------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=32)
   Output: c3
   Filter: (tbl04.c3 !~* 'ANY.*'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 230:
SELECT c3 FROM tbl04 WHERE c3 !~* 'ANY.*'; -- does not push down
     c3     
------------
 example
 thing
 !)@(#)!_#!
 (!)JAWLFJ
 example
 thing
 example
 thing
 (!)JAWLFJ
 example
 thing
 example
(12 rows)

-- test for specific type
--Testcase 231:
ALTER TABLE tbl04 ALTER COLUMN c3 TYPE inet;
--Testcase 232:
EXPLAIN VERBOSE
SELECT id FROM tbl04 WHERE c3 + 1 > inet '192.168.1.100'; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=4)
   Output: id
   Filter: ((tbl04.c3 + '1'::bigint) > '192.168.1.100'::inet)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 233:
ALTER TABLE tbl04 ALTER COLUMN c3 TYPE json;
--Testcase 234:
EXPLAIN VERBOSE
SELECT id FROM tbl04 WHERE c3->>'tag' = 'test data'; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=4)
   Output: id
   Filter: ((tbl04.c3 ->> 'tag'::text) = 'test data'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 235:
ALTER TABLE tbl04 ALTER COLUMN c3 TYPE jsonb;
--Testcase 236:
EXPLAIN VERBOSE
SELECT id FROM tbl04 WHERE c3->>'tag' = 'test data'; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=4)
   Output: id
   Filter: ((tbl04.c3 ->> 'tag'::text) = 'test data'::text)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c3 FROM odbc_fdw_regress.tbl04
(5 rows)

--Testcase 237:
ALTER TABLE tbl04 ALTER COLUMN c3 TYPE point;
--Testcase 238:
EXPLAIN VERBOSE
SELECT id FROM tbl04 WHERE c3 >> point '(1, 3)'; -- does not push down
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan on public.tbl04  (cost=25.00..39.00 rows=14 width=4)
   Output: id
   Filter: (tbl04.c3 >> '(1,3)'::point)
   Foreign Table Size: 14 b
   Remote SQL: SELECT id, c3 FROM odbc_fdw_regress.tbl04
(5 rows)

-- reset c3 column type
--Testcase 239:
ALTER TABLE tbl04 ALTER COLUMN c3 TYPE text;
-- Reset data for tbl04;
--Testcase 240:
DELETE FROM tbl04 WHERE id > 10;
-- Test: key column has NULL value
--Testcase 269:
CREATE FOREIGN TABLE tbl05 (id int OPTIONS (key 'true'), c1 text)
  SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'tbl05');
-- Select data
--Testcase 270:
SELECT * FROM tbl05;
 id |       c1       
----+----------------
    | NULL value
  1 | NOT NULL value
(2 rows)

-- Update data, expect ERROR
--Testcase 271:
UPDATE tbl05 SET c1 = 'Updated';
psql:sql/14.9/new_test.sql:786: ERROR:  Value of key column is NULL
--Testcase 272:
-- Delete data, expect ERROR
DELETE FROM tbl05;
psql:sql/14.9/new_test.sql:789: ERROR:  Value of key column is NULL
--Testcase 70:
DROP SERVER :DB_SERVERNAME CASCADE;
psql:sql/14.9/new_test.sql:792: NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to user mapping for public on server mysql_server
drop cascades to foreign table tbl01
drop cascades to foreign table tbl02
drop cascades to foreign table tbl03
drop cascades to foreign table tbl04
drop cascades to foreign table tbl05
--Testcase 71:
DROP EXTENSION :DB_EXTENSIONNAME CASCADE;
