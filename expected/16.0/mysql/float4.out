--
-- mysql
-- float4
--
\set ECHO none
\i sql/16.0/float4.sql
--
-- FLOAT4
--
--Testcase 1:
CREATE EXTENSION IF NOT EXISTS :DB_EXTENSIONNAME;
--Testcase 2:
CREATE SERVER :DB_SERVERNAME FOREIGN DATA WRAPPER :DB_EXTENSIONNAME OPTIONS(
		odbc_DRIVER :DB_DRIVERNAME,
		odbc_SERVER :DB_SERVER,
		odbc_PORT :DB_PORT,
		odbc_DATABASE :DB_DATABASE
);
--Testcase 3:
CREATE USER MAPPING FOR public SERVER :DB_SERVERNAME OPTIONS(odbc_UID :DB_USER, odbc_PWD :DB_PASS);
--Testcase 4:
CREATE FOREIGN TABLE FLOAT4_TBL(f1 float4, id serial OPTIONS (key 'true'))
   SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'float4_tbl');
--Testcase 5:
DELETE FROM FLOAT4_TBL;
--Testcase 6:
INSERT INTO FLOAT4_TBL(f1) VALUES ('    0.0');
--Testcase 7:
INSERT INTO FLOAT4_TBL(f1) VALUES ('1004.30   ');
--Testcase 8:
INSERT INTO FLOAT4_TBL(f1) VALUES ('     -34.84    ');
--Testcase 9:
INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e+20');
--Testcase 10:
INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e-20');
-- test for over and under flow
--Testcase 11:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70');
psql:sql/16.0/float4.sql:37: ERROR:  "10e70" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70');
                                           ^
--Testcase 12:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70');
psql:sql/16.0/float4.sql:39: ERROR:  "-10e70" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70');
                                           ^
--Testcase 13:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70');
psql:sql/16.0/float4.sql:41: ERROR:  "10e-70" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70');
                                           ^
--Testcase 14:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70');
psql:sql/16.0/float4.sql:43: ERROR:  "-10e-70" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70');
                                           ^
--Testcase 15:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'::float8);
psql:sql/16.0/float4.sql:46: ERROR:  value out of range: overflow
--Testcase 16:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'::float8);
psql:sql/16.0/float4.sql:48: ERROR:  value out of range: overflow
--Testcase 17:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70'::float8);
psql:sql/16.0/float4.sql:50: ERROR:  value out of range: underflow
--Testcase 18:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70'::float8);
psql:sql/16.0/float4.sql:52: ERROR:  value out of range: underflow
--Testcase 19:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400');
psql:sql/16.0/float4.sql:54: ERROR:  "10e400" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400');
                                           ^
--Testcase 20:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400');
psql:sql/16.0/float4.sql:56: ERROR:  "-10e400" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400');
                                           ^
--Testcase 21:
INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400');
psql:sql/16.0/float4.sql:58: ERROR:  "10e-400" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400');
                                           ^
--Testcase 22:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400');
psql:sql/16.0/float4.sql:60: ERROR:  "-10e-400" is out of range for type real
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400');
                                           ^
-- bad input
--Testcase 23:
INSERT INTO FLOAT4_TBL(f1) VALUES ('');
psql:sql/16.0/float4.sql:64: ERROR:  invalid input syntax for type real: ""
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('');
                                           ^
--Testcase 24:
INSERT INTO FLOAT4_TBL(f1) VALUES ('       ');
psql:sql/16.0/float4.sql:66: ERROR:  invalid input syntax for type real: "       "
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('       ');
                                           ^
--Testcase 25:
INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz');
psql:sql/16.0/float4.sql:68: ERROR:  invalid input syntax for type real: "xyz"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz');
                                           ^
--Testcase 26:
INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0');
psql:sql/16.0/float4.sql:70: ERROR:  invalid input syntax for type real: "5.0.0"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0');
                                           ^
--Testcase 27:
INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0');
psql:sql/16.0/float4.sql:72: ERROR:  invalid input syntax for type real: "5 . 0"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0');
                                           ^
--Testcase 28:
INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0');
psql:sql/16.0/float4.sql:74: ERROR:  invalid input syntax for type real: "5.   0"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0');
                                           ^
--Testcase 29:
INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0');
psql:sql/16.0/float4.sql:76: ERROR:  invalid input syntax for type real: "     - 3.0"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0');
                                           ^
--Testcase 30:
INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5');
psql:sql/16.0/float4.sql:78: ERROR:  invalid input syntax for type real: "123            5"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5');
                                           ^
-- Also try it with non-error-throwing API
--Testcase 145:
CREATE FOREIGN TABLE NON_ERROR_THROWING_API(f1 text, id serial OPTIONS (key 'true')) SERVER :DB_SERVERNAME OPTIONS (schema :DB_SCHEMA, table 'non_error_throwing_api');
--Testcase 146:
INSERT INTO NON_ERROR_THROWING_API VALUES ('34.5', 1), ('xyz', 2), ('1e400', 3);
--Testcase 145:
SELECT pg_input_is_valid(f1, 'float4') FROM NON_ERROR_THROWING_API WHERE id = 1;
 pg_input_is_valid 
-------------------
 t
(1 row)

--Testcase 145:
SELECT pg_input_is_valid(f1, 'float4') FROM NON_ERROR_THROWING_API WHERE id = 2;
 pg_input_is_valid 
-------------------
 f
(1 row)

--Testcase 145:
SELECT pg_input_is_valid(f1, 'float4') FROM NON_ERROR_THROWING_API WHERE id = 3;
 pg_input_is_valid 
-------------------
 f
(1 row)

--Testcase 145:
SELECT * FROM pg_input_error_info((SELECT f1 FROM NON_ERROR_THROWING_API WHERE id = 3), 'float4');
                message                | detail | hint | sql_error_code 
---------------------------------------+--------+------+----------------
 "1e400" is out of range for type real |        |      | 22003
(1 row)

--Testcase 58:
DELETE FROM NON_ERROR_THROWING_API;
--
-- special inputs
--
--Testcase 31:
ALTER FOREIGN TABLE FLOAT4_TBL OPTIONS (SET table 'float4_tbl_tmp');
--Testcase 32:
INSERT INTO FLOAT4_TBL(f1) VALUES ('NaN'::float4);
psql:sql/16.0/float4.sql:102: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 33:
SELECT f1 AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 34:
DELETE FROM FLOAT4_TBL;
--Testcase 35:
INSERT INTO FLOAT4_TBL(f1) VALUES ('nan'::float4);
psql:sql/16.0/float4.sql:108: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 36:
SELECT f1 AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 37:
DELETE FROM FLOAT4_TBL;
--Testcase 38:
INSERT INTO FLOAT4_TBL(f1) VALUES ('   NAN  '::float4);
psql:sql/16.0/float4.sql:114: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 39:
SELECT f1 AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 40:
DELETE FROM FLOAT4_TBL;
--Testcase 41:
INSERT INTO FLOAT4_TBL(f1) VALUES ('infinity'::float4);
psql:sql/16.0/float4.sql:120: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 42:
SELECT f1 AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 43:
DELETE FROM FLOAT4_TBL;
--Testcase 44:
INSERT INTO FLOAT4_TBL(f1) VALUES ('          -INFINiTY   '::float4);
psql:sql/16.0/float4.sql:126: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 45:
SELECT f1 AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

-- bad special inputs
--Testcase 46:
INSERT INTO FLOAT4_TBL(f1) VALUES ('N A N'::float4);
psql:sql/16.0/float4.sql:131: ERROR:  invalid input syntax for type real: "N A N"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('N A N'::float4);
                                           ^
--Testcase 47:
INSERT INTO FLOAT4_TBL(f1) VALUES ('NaN x'::float4);
psql:sql/16.0/float4.sql:133: ERROR:  invalid input syntax for type real: "NaN x"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES ('NaN x'::float4);
                                           ^
--Testcase 48:
INSERT INTO FLOAT4_TBL(f1) VALUES (' INFINITY    x'::float4);
psql:sql/16.0/float4.sql:135: ERROR:  invalid input syntax for type real: " INFINITY    x"
LINE 1: INSERT INTO FLOAT4_TBL(f1) VALUES (' INFINITY    x'::float4)...
                                           ^
--Testcase 49:
DELETE FROM FLOAT4_TBL;
--Testcase 50:
INSERT INTO FLOAT4_TBL(f1) VALUES ('Infinity'::float4);
psql:sql/16.0/float4.sql:140: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 51:
SELECT (f1::float4 + 100.0) AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 52:
DELETE FROM FLOAT4_TBL;
--Testcase 53:
INSERT INTO FLOAT4_TBL(f1) VALUES ('Infinity'::float4);
psql:sql/16.0/float4.sql:147: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 54:
SELECT (f1::float4 / 'Infinity'::float4) AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 55:
DELETE FROM FLOAT4_TBL;
--Testcase 56:
INSERT INTO FLOAT4_TBL(f1) VALUES ('42'::float4);
--Testcase 57:
SELECT (f1::float4 / 'Infinity'::float4) AS float4 FROM FLOAT4_TBL;
 float4 
--------
      0
(1 row)

--Testcase 58:
DELETE FROM FLOAT4_TBL;
--Testcase 59:
INSERT INTO FLOAT4_TBL(f1) VALUES ('nan'::float4);
psql:sql/16.0/float4.sql:161: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 60:
SELECT (f1::float4 / 'nan'::float4) AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 61:
DELETE FROM FLOAT4_TBL;
--Testcase 62:
INSERT INTO FLOAT4_TBL(f1) VALUES ('nan'::float4);
psql:sql/16.0/float4.sql:168: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 63:
SELECT (f1::float4 / '0'::float4) AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

--Testcase 64:
DELETE FROM FLOAT4_TBL;
--Testcase 65:
INSERT INTO FLOAT4_TBL(f1) VALUES ('nan'::numeric);
psql:sql/16.0/float4.sql:175: ERROR:  Executing ODBC query
[MySQL][ODBC 8.0(w) Driver][mysqld-8.0.33]Data truncated for column 'f1' at row 1
--Testcase 66:
SELECT (f1::float4) AS float4 FROM FLOAT4_TBL;
 float4 
--------
(0 rows)

-- The comparison of floating-point values for equality is not safe
-- because of the rounding errors when converting between binary and decimal.
-- A floating-point value as written in an SQL statement may not be
-- the same as the value represented internally.
-- E.g: binary value of 1004.3 may be 1004.2999999999999
--Testcase 67:
ALTER FOREIGN TABLE FLOAT4_TBL OPTIONS (SET table 'float4_tbl');
--Testcase 68:
SELECT f1 FROM FLOAT4_TBL;
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e+20
 1.23457e-20
(5 rows)

--Testcase 69:
SELECT f1 FROM FLOAT4_TBL f WHERE f.f1 <> '1004.3';
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e+20
 1.23457e-20
(5 rows)

--Testcase 70:
SELECT f1 FROM FLOAT4_TBL f WHERE f.f1 = '1004.3';
 f1 
----
(0 rows)

--Testcase 71:
SELECT f1 FROM FLOAT4_TBL f WHERE '1004.3' > f.f1;
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e-20
(4 rows)

--Testcase 72:
SELECT f1 FROM FLOAT4_TBL f WHERE  f.f1 < '1004.3';
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e-20
(4 rows)

--Testcase 73:
SELECT f.f1 FROM FLOAT4_TBL f WHERE '1004.3' >= f.f1;
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e-20
(4 rows)

--Testcase 74:
SELECT f.f1 FROM FLOAT4_TBL f WHERE  f.f1 <= '1004.3';
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e-20
(4 rows)

--Testcase 75:
SELECT f.f1, f.f1 * '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
     f1      |       x        
-------------+----------------
      1004.3 |         -10043
 1.23457e+20 | -1.2345701e+21
 1.23457e-20 | -1.2345699e-19
(3 rows)

--Testcase 76:
SELECT f.f1, f.f1 + '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
     f1      |      x      
-------------+-------------
      1004.3 |       994.3
 1.23457e+20 | 1.23457e+20
 1.23457e-20 |         -10
(3 rows)

--Testcase 77:
SELECT f.f1, f.f1 / '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
     f1      |      x       
-------------+--------------
      1004.3 |      -100.43
 1.23457e+20 | -1.23457e+19
 1.23457e-20 | -1.23457e-21
(3 rows)

--Testcase 78:
SELECT f.f1, f.f1 - '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
     f1      |      x      
-------------+-------------
      1004.3 |      1014.3
 1.23457e+20 | 1.23457e+20
 1.23457e-20 |          10
(3 rows)

-- test divide by zero
--Testcase 79:
SELECT f.f1 / '0.0' from FLOAT4_TBL f;
psql:sql/16.0/float4.sql:221: ERROR:  division by zero
--Testcase 80:
SELECT f1 FROM FLOAT4_TBL;
     f1      
-------------
           0
      1004.3
      -34.84
 1.23457e+20
 1.23457e-20
(5 rows)

-- test the unary float4abs operator
--Testcase 81:
SELECT f.f1, @f.f1 AS abs_f1 FROM FLOAT4_TBL f;
     f1      |   abs_f1    
-------------+-------------
           0 |           0
      1004.3 |      1004.3
      -34.84 |       34.84
 1.23457e+20 | 1.23457e+20
 1.23457e-20 | 1.23457e-20
(5 rows)

--Testcase 82:
UPDATE FLOAT4_TBL
   SET f1 = FLOAT4_TBL.f1 * '-1'
   WHERE FLOAT4_TBL.f1 > '0.0';
--Testcase 83:
SELECT f1 FROM FLOAT4_TBL;
      f1      
--------------
            0
      -1004.3
       -34.84
 -1.23457e+20
 -1.23457e-20
(5 rows)

-- test edge-case coercions to integer
--Testcase 84:
ALTER FOREIGN TABLE FLOAT4_TBL OPTIONS (SET table 'float4_tbl_tmp');
--Testcase 85:
DELETE FROM FLOAT4_TBL;
--Testcase 86:
INSERT INTO FLOAT4_TBL(f1) VALUES ('32767.4'::float4);
--Testcase 87:
SELECT f1::int2 as int2 FROM FLOAT4_TBL;
 int2  
-------
 32767
(1 row)

--Testcase 88:
DELETE FROM FLOAT4_TBL;
--Testcase 89:
INSERT INTO FLOAT4_TBL(f1) VALUES ('32767.6'::float4);
--Testcase 90:
SELECT f1::int2 FROM FLOAT4_TBL;
psql:sql/16.0/float4.sql:253: ERROR:  smallint out of range
--Testcase 91:
DELETE FROM FLOAT4_TBL;
--Testcase 92:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-32768.4'::float4);
--Testcase 93:
SELECT f1::int2 as int2 FROM FLOAT4_TBL;
  int2  
--------
 -32768
(1 row)

--Testcase 94:
DELETE FROM FLOAT4_TBL;
--Testcase 95:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-32768.6'::float4);
--Testcase 96:
SELECT f1::int2 FROM FLOAT4_TBL;
psql:sql/16.0/float4.sql:267: ERROR:  smallint out of range
--Testcase 97:
DELETE FROM FLOAT4_TBL;
--Testcase 98:
INSERT INTO FLOAT4_TBL(f1) VALUES ('2147483520'::float4);
--Testcase 99:
SELECT f1::int4 FROM FLOAT4_TBL;
     f1     
------------
 2147480064
(1 row)

--Testcase 100:
DELETE FROM FLOAT4_TBL;
--Testcase 101:
INSERT INTO FLOAT4_TBL(f1) VALUES ('2147483647'::float4);
--Testcase 102:
SELECT f1::int4 FROM FLOAT4_TBL;
     f1     
------------
 2147480064
(1 row)

--Testcase 103:
DELETE FROM FLOAT4_TBL;
--Testcase 104:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-2147483648.5'::float4);
--Testcase 105:
SELECT f1::int4  as int4 FROM FLOAT4_TBL;
    int4     
-------------
 -2147480064
(1 row)

--Testcase 106:
DELETE FROM FLOAT4_TBL;
--Testcase 107:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-2147483900'::float4);
--Testcase 108:
SELECT f1::int4 FROM FLOAT4_TBL;
     f1      
-------------
 -2147480064
(1 row)

--Testcase 109:
DELETE FROM FLOAT4_TBL;
--Testcase 110:
INSERT INTO FLOAT4_TBL(f1) VALUES ('9223369837831520256'::float4);
--Testcase 111:
SELECT f1::int8 as int8 FROM FLOAT4_TBL;
        int8         
---------------------
 9223369837831520256
(1 row)

--Testcase 112:
DELETE FROM FLOAT4_TBL;
--Testcase 113:
INSERT INTO FLOAT4_TBL(f1) VALUES ('9223372036854775807'::float4);
--Testcase 114:
SELECT f1::int8 FROM FLOAT4_TBL;
         f1          
---------------------
 9223369837831520256
(1 row)

--Testcase 115:
DELETE FROM FLOAT4_TBL;
--Testcase 116:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-9223372036854775808.5'::float4);
--Testcase 117:
SELECT f1::int8 as int8 FROM FLOAT4_TBL;
         int8         
----------------------
 -9223369837831520256
(1 row)

--Testcase 118:
DELETE FROM FLOAT4_TBL;
--Testcase 119:
INSERT INTO FLOAT4_TBL(f1) VALUES ('-9223380000000000000'::float4);
--Testcase 120:
SELECT f1::int8 FROM FLOAT4_TBL;
psql:sql/16.0/float4.sql:323: ERROR:  bigint out of range
-- Test for correct input rounding in edge cases.
-- These lists are from Paxson 1991, excluding subnormals and
-- inputs of over 9 sig. digits.
--Testcase 121:
DELETE FROM FLOAT4_TBL;
--Testcase 122:
INSERT INTO FLOAT4_TBL(f1) VALUES ('5e-20'::float4);
--Testcase 123:
INSERT INTO FLOAT4_TBL(f1) VALUES ('67e14'::float4);
--Testcase 124:
INSERT INTO FLOAT4_TBL(f1) VALUES ('985e15'::float4);
--Testcase 125:
INSERT INTO FLOAT4_TBL(f1) VALUES ('55895e-16'::float4);
--Testcase 126:
INSERT INTO FLOAT4_TBL(f1) VALUES ('7038531e-32'::float4);
--Testcase 127:
INSERT INTO FLOAT4_TBL(f1) VALUES ('702990899e-20'::float4);
--Testcase 128:
INSERT INTO FLOAT4_TBL(f1) VALUES ('3e-23'::float4);
--Testcase 129:
INSERT INTO FLOAT4_TBL(f1) VALUES ('57e18'::float4);
--Testcase 130:
INSERT INTO FLOAT4_TBL(f1) VALUES ('789e-35'::float4);
--Testcase 131:
INSERT INTO FLOAT4_TBL(f1) VALUES ('2539e-18'::float4);
--Testcase 132:
INSERT INTO FLOAT4_TBL(f1) VALUES ('76173e28'::float4);
--Testcase 133:
INSERT INTO FLOAT4_TBL(f1) VALUES ('887745e-11'::float4);
--Testcase 134:
INSERT INTO FLOAT4_TBL(f1) VALUES ('5382571e-37'::float4);
--Testcase 135:
INSERT INTO FLOAT4_TBL(f1) VALUES ('82381273e-35'::float4);
--Testcase 136:
INSERT INTO FLOAT4_TBL(f1) VALUES ('750486563e-38'::float4);
--Testcase 137:
SELECT float4send(f1) FROM FLOAT4_TBL;
 float4send 
------------
 \x1f6c1e4a
 \x59be6cea
 \x5d5ab6c4
 \x2cc4a9bd
 \x15ae43fc
 \x2cf757cd
 \x1a111234
 \x6045c22c
 \x0a23de70
 \x2736f449
 \x7616398a
 \x3714f05c
 \x0d2eaca4
 \x128289d3
 \x0f183783
(15 rows)

-- Test that the smallest possible normalized input value inputs
-- correctly, either in 9-significant-digit or shortest-decimal
-- format.
--
-- exact val is             1.1754943508...
-- shortest val is          1.1754944000
-- midpoint to next val is  1.1754944208...
--Testcase 138:
DELETE FROM FLOAT4_TBL;
--Testcase 139:
INSERT INTO FLOAT4_TBL(f1) VALUES ('1.17549435e-38'::float4);
--Testcase 140:
INSERT INTO FLOAT4_TBL(f1) VALUES ('1.1754944e-38'::float4);
--Testcase 141:
SELECT float4send(f1) FROM FLOAT4_TBL;
 float4send 
------------
 \x007fffe1
 \x007fffe1
(2 rows)

-- test output (and round-trip safety) of various values.
-- To ensure we're testing what we think we're testing, start with
-- float values specified by bit patterns (as a useful side effect,
-- this means we'll fail on non-IEEE platforms).
--Testcase 142:
DROP FOREIGN TABLE FLOAT4_TBL;
--Testcase 143:
DROP SERVER :DB_SERVERNAME CASCADE;
psql:sql/16.0/float4.sql:388: NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to user mapping for public on server mysql_server
drop cascades to foreign table non_error_throwing_api
--Testcase 144:
DROP EXTENSION :DB_EXTENSIONNAME CASCADE;
